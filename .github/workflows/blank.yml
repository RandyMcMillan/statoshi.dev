# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  ubuntu-latest-docker-shell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
         make shell

  ubuntu-latest-docker-header:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
         make init header user=root

  ubuntu-latest-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
         make init header run user=root

  ubuntu20-docker:
    runs-on: ubuntu20
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
         make init header run user=root

  ubuntu18-docker:
    runs-on: ubuntu18
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
         make init header run user=root

#  ubuntu-latest-build-on-host:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Make
#        run: |
#         make init
#         ./contrib/install_db4.sh `pwd`
#         sudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3
#         sudo apt install libevent-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev
#         sudo apt install g++-arm-linux-gnueabihf curl
#         make install -C depends
#         ./autogen.sh
#         ./configure --disable-wallet --disable-tests --disable-bench --disable-docs
#         make
#         make install
#         
#  ubuntu20-build-on-host:
#    runs-on: ubuntu20
#    steps:
#      - uses: actions/checkout@v2
#      - name: Make
#        run: |
#         make init
#         sudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3
#         sudo apt install g++-arm-linux-gnueabihf curl
#         make -C depends
#         ./autogen.sh
#         ./configure --disable-wallet --disable-tests --disable-bench --disable-docs
#         make
#         make install
#         
#  ubuntu18-build-on-host:
#    runs-on: ubuntu18
#    steps:
#      - uses: actions/checkout@v2
#      - name: Make
#        run: |
#         make init
#         sudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3
#         sudo apt install g++-arm-linux-gnueabihf curl
#         make -C depends
#         ./autogen.sh
#         ./configure --disable-wallet --disable-tests --disable-bench --disable-docs
#         make
#         make install
         
  ubuntu-latest-build-on-host-cross-compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Make
        run: |
         make init
         sudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3
         sudo apt install g++-arm-linux-gnueabihf curl
         make -C depends HOST=arm-linux-gnueabihf NO_QT=1
         ./autogen.sh
         ./configure --disable-wallet --disable-tests --disable-bench --disable-docs --prefix=$PWD/depends/arm-linux-gnueabihf --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++
         make
         make install
