#BEGIN statoshi.all
FROM docker.pkg.github.com/randymcmillan/statoshi.dev/header-root:latest as config-final
RUN echo statoshi.all
RUN echo statoshi.all
RUN echo statoshi.all
RUN echo statoshi.all
RUN df -H
###########################################
# We build Statoshi last
FROM config-final as clone-stats-bitcoincore-dev
###########################################
ENV REPO=stats.bitcoincore.dev
# Change to your fork
RUN git clone -b master ${GIT_SERVER}/${GIT_PROFILE}/${GIT_REPO_NAME} --depth 2 ${GIT_REPO_NAME}

################################################
FROM clone-stats-bitcoincore-dev as make-depends
################################################

# Install before autogen.sh and configure
#RUN make -j $(nproc) install -C ${REPO}/depends
RUN apk add libzmq
RUN pip3 install pyzmq
#RUN python3 ${REPO}/contrib/zmq/zmq_sub.py &

############################
FROM make-depends as autogen
############################

#RUN cd ${GIT_REPO_NAME} && ./autogen.sh

#########################
FROM autogen as configure
#########################

#RUN cd ${GIT_REPO_NAME}  && ./configure --disable-wallet --disable-tests --disable-hardening --disable-man --enable-util-cli --enable-util-tx --with-gui=no --without-miniupnpc --disable-bench

######################
FROM configure as make
######################

#RUN cd ${GIT_REPO_NAME} && make -f Makefile -j $(nproc)
#RUN cd ${GIT_REPO_NAME} && make install

###########################
FROM make as strip-binaries
###########################

RUN echo statoshi.all
###########################
FROM strip-binaries as statoshi
###########################

RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/fastcopy-chaindata.py /usr/local/bin/fastcopy-chaindata.py
RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/blocknotify /etc/periodic/15min/blocknotify
RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoind /etc/periodic/15min/bitcoind

RUN ${GIT_REPO_NAME}/conf/config.bitcoin.conf.sh

# These should be the mounted volume
#TODO mimic the bitcoin package install?
RUN mkdir -p /etc/bitcoin
RUN mkdir -p /var/lib/bitcoin
RUN mkdir -p /root/.bitcoin
RUN mkdir -p /home/root/.bitcoin
RUN ln -s /root/.bitcoin /var/lib/bitcoin
RUN install -v ${GIT_REPO_NAME}/conf/bitcoin.conf /etc/bitcoin/bitcoin.conf
RUN install -v ${GIT_REPO_NAME}/conf/bitcoin.conf /root/.bitcoin/bitcoin.conf
RUN install -v ${GIT_REPO_NAME}/conf/bitcoin.conf /home/root/.bitcoin/bitcoin.conf
RUN install -v ${GIT_REPO_NAME}/conf/additional.conf /etc/bitcoin/additional.conf
RUN install -v ${GIT_REPO_NAME}/conf/additional.conf /root/.bitcoin/additional.conf
RUN install -v ${GIT_REPO_NAME}/conf/additional.conf /home/root/.bitcoin/additional.conf

RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoind /usr/local/bin/bitcoind
RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoind /usr/bin/bitcoind

RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoin-cli /usr/local/bin/bitcoin-cli
RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoin-cli /usr/bin/bitcoin-cli

RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoin-tx /usr/local/bin/bitcoin-tx
RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoin-tx /usr/bin/bitcoin-tx

RUN install -v ${GIT_REPO_NAME}/conf/usr/local/bin/check_synced.sh /usr/local/bin/checked_synced.sh

###########################
# Micro containers may not be able to compile from source - signed binaries verified here
###########################

RUN apk add --no-cache gnupg
RUN gpg --import  ${GIT_REPO_NAME}/conf/usr/local/bin/randymcmillan2.asc
#RUN gpg --refresh-keys

RUN while read fingerprint keyholder_name; do gpg --keyserver hkps://keys.openpgp.org --recv-keys ${fingerprint}; done <  ${GIT_REPO_NAME}/conf/usr/local/bin/keys.txt

RUN gpg --verify ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoind.gpg    ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoind

RUN gpg --verify ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoin-cli.gpg ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoin-cli

RUN gpg --verify ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoin-tx.gpg  ${GIT_REPO_NAME}/conf/usr/local/bin/bitcoin-tx

RUN df -H
#END statoshi.all

